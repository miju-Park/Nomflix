{"version":3,"sources":["assets/noPosterSmall.png","Components/Section.tsx","Components/Loader.tsx","Components/Message.tsx","Components/Poster.tsx","Routes/Home/HomePresenter.tsx","api.js","Routes/Home/index.ts","Routes/Home/HomeContainer.tsx","Routes/TV/TVPresenter.tsx","Routes/TV/index.js","Routes/TV/TVContainer.tsx","Routes/Search/SearchPresenter.tsx","Routes/Search/index.js","Routes/Search/SearchContainer.tsx","Components/Header.tsx","Routes/Detail/DetailTabPresenter.tsx","Routes/Detail/DetailPresenter.tsx","Routes/Detail/index.js","Routes/Detail/DetailContainer.tsx","Components/Router.tsx","Components/GlobalStyles.ts","Components/App.tsx","index.tsx"],"names":["module","exports","Container","styled","div","Title","span","Grid","title","children","role","aria-label","Text","props","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","url","rating","year","isMovie","to","require","length","substring","Home","nowPlaying","upcoming","topRated","popular","error","loading","Helmet","Loader","Section","map","movie","key","release_date","vote_average","poster_path","api","axios","create","baseURL","method","params","api_key","language","tvAPI","get","append_to_response","term","query","encodeURIComponent","moviesAPI","HomeContainer","useState","state","setState","useEffect","a","data","results","HomePresenter","TVPresenter","airingToday","show","name","first_air_date","TVContainer","console","log","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","onChange","value","SearchContainer","searchByTerm","e","preventDefault","target","Header","header","List","ul","Item","li","current","SLink","Link","pathname","useLocation","DetailTabPresenter","menu","info","src","videos","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Divider","ImdbItem","img","Overview","p","TabContainer","TabHeader","isActive","TabBody","DetailPresenter","result","original_title","original_name","pathInfo","search","backdrop_path","runtime","episode_run_time","genres","genre","idx","imdb_id","href","alt","overview","includes","split","DetailContainer","useParams","push","useHistory","parsedId","parseInt","isNaN","path","exact","component","TV","Search","Detail","from","GlobalStyle","createGlobalStyle","reset","App","Router","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bbef2ec8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noPosterSmall.87a0eb6a.png\";","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface SectionInterface {\n  title: string;\n  children: React.ReactNode | React.ReactNodeArray;\n}\n\nconst Container = styled.div`\n  :not(:last-child) {\n    margin-bottom: 50px;\n  }\n`;\nconst Title = styled.span`\n  font-size: 14px;\n  font-weight: 600;\n`;\n\nconst Grid = styled.div`\n  margin-top: 25px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  grid-gap: 25px;\n`;\n\nexport default ({ title, children }: SectionInterface) => {\n  return (\n    <Container>\n      <Title>{title}</Title>\n      <Grid>{children}</Grid>\n    </Container>\n  );\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  font-size: 28px;\n  margin-top: 20px;\n`;\n\nexport default () => (\n  <Container>\n    <span role=\"img\" aria-label=\"loading\">\n      ⏰\n    </span>\n  </Container>\n);\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ntype MessageInterface = {\n  text: string;\n  color: string;\n};\n\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Text = styled.span`\n  color: ${(props) => props.color};\n`;\nconst Message = ({ text, color }: MessageInterface) => (\n  <Container>\n    <Text color={color}>{text}</Text>\n  </Container>\n);\n\nexport default Message;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\ntype PosterInterface = {\n  id: string;\n  url: string;\n  title: string;\n  rating?: number;\n  year?: string;\n  isMovie?: boolean;\n};\n\ntype ImageInterface = {\n  bgUrl: string;\n};\n\nconst Container = styled.div`\n  font-size: 12px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${(props: ImageInterface) => props.bgUrl});\n  height: 180px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n  transition: opacity 0.2s linear;\n`;\nconst Rating = styled.span`\n  bottom: 5px;\n  right: 5px;\n  position: absolute;\n  opacity: 0;\n  transition: opacity 0.2s linear;\n`;\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\nconst Title = styled.span`\n  display: block;\n  font-size: 12px;\n  margin-bottom: 3px;\n`;\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nconst Poster = ({\n  id,\n  url,\n  title,\n  rating,\n  year,\n  isMovie = false,\n}: PosterInterface) => (\n  <Link to={isMovie ? `/movie/${id}?tab=video` : `/show/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image\n          bgUrl={\n            url\n              ? `https://image.tmdb.org/t/p/w300/${url}`\n              : require(\"../assets/noPosterSmall.png\")\n          }\n        />\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n            ⭐️\n          </span>{\" \"}\n          {rating}/10\n        </Rating>\n      </ImageContainer>\n      <Title>\n        {title.length > 18 ? `${title.substring(0, 18)}...` : title}\n      </Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n);\nexport default Poster;\n","import React from \"react\";\nimport { MovieInterface } from \"./HomeContainer\";\nimport styled from \"styled-components\";\nimport Section from \"../../Components/Section\";\nimport Loader from \"../../Components/Loader\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\nimport { Helmet } from \"react-helmet\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst Home = ({\n  nowPlaying,\n  upcoming,\n  topRated,\n  popular,\n  error,\n  loading,\n}: MovieInterface) => {\n  return (\n    <>\n      <Helmet>\n        <title>Movies | Nomflix</title>\n      </Helmet>\n\n      {loading ? (\n        <Loader />\n      ) : (\n        <Container>\n          {upcoming && upcoming.length > 0 && (\n            <Section title=\"Upcoming Movies\">\n              {upcoming.map((movie) => (\n                <Poster\n                  key={movie.id}\n                  id={movie.id}\n                  isMovie={true}\n                  title={movie.title}\n                  year={movie.release_date.substring(0, 4)}\n                  rating={movie.vote_average}\n                  url={movie.poster_path}\n                />\n              ))}\n            </Section>\n          )}\n          {nowPlaying && nowPlaying.length > 0 && (\n            <Section title=\"Now Playing\">\n              {nowPlaying.map((movie) => (\n                <Poster\n                  key={movie.id}\n                  id={movie.id}\n                  isMovie={true}\n                  title={movie.title}\n                  year={movie.release_date.substring(0, 4)}\n                  rating={movie.vote_average}\n                  url={movie.poster_path}\n                />\n              ))}\n            </Section>\n          )}\n          {popular && popular.length > 0 && (\n            <Section title=\"Popular Moviews\">\n              {popular.map((movie) => (\n                <Poster\n                  key={movie.id}\n                  id={movie.id}\n                  isMovie={true}\n                  title={movie.title}\n                  year={movie.release_date.substring(0, 4)}\n                  rating={movie.vote_average}\n                  url={movie.poster_path}\n                />\n              ))}\n            </Section>\n          )}\n          {topRated && topRated.length > 0 && (\n            <Section title=\"Top Ratied Movies\">\n              {topRated.map((movie) => (\n                <Poster\n                  key={movie.id}\n                  id={movie.id}\n                  isMovie={true}\n                  title={movie.title}\n                  year={movie.release_date.substring(0, 4)}\n                  rating={movie.vote_average}\n                  url={movie.poster_path}\n                />\n              ))}\n            </Section>\n          )}\n          {error && <Message text={error} color=\"#e74c3c\" />}\n        </Container>\n      )}\n    </>\n  );\n};\n\nexport default Home;\n","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://api.themoviedb.org/3\",\n  method: \"get\",\n  params: {\n    api_key: \"656d6f5526ed70c14d4317dda8957fee\",\n    language: \"en-US\",\n  },\n});\n\nexport const tvAPI = {\n  topRated: () => api.get(\"/tv/top_rated\"),\n  popular: () => api.get(\"/tv/popular\"),\n  airingToday: () => api.get(\"/tv/airing_today\"),\n  showDetail: (id) =>\n    api.get(`/tv/${id}`, {\n      params: {\n        append_to_response: \"videos\",\n      },\n    }),\n  search: (term) =>\n    api.get(\"/search/tv\", {\n      params: {\n        query: encodeURIComponent(term),\n      },\n    }),\n};\nexport const moviesAPI = {\n  nowPlaying: () => api.get(\"/movie/now_playing\"),\n  upcoming: () => api.get(\"/movie/upcoming\"),\n  topRated: () => api.get(\"/movie/top_rated\"),\n  popular: () => api.get(\"/movie/popular\"),\n  movieDetail: (id) =>\n    api.get(`/movie/${id}`, {\n      params: {\n        append_to_response: \"videos\",\n      },\n    }),\n  search: (term) =>\n    api.get(\"/search/movie\", {\n      params: {\n        query: encodeURIComponent(term),\n      },\n    }),\n};\n","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;\n","import React, { useState, useEffect } from \"react\";\nimport HomePresenter from \"./HomePresenter\";\nimport { moviesAPI } from \"../../api\";\n\nexport type MovieType = {\n  id: string;\n  title: string;\n  release_date: string;\n  vote_average: number;\n  poster_path: string;\n};\n\nexport interface MovieInterface {\n  nowPlaying: Array<MovieType>;\n  upcoming: Array<MovieType>;\n  topRated: Array<MovieType>;\n  popular: Array<MovieType>;\n  error: string;\n  loading: boolean;\n}\n\nexport default () => {\n  const [state, setState] = useState({\n    nowPlaying: [],\n    upcoming: [],\n    topRated: [],\n    popular: [],\n    error: \"\",\n    loading: true,\n  });\n  const { nowPlaying, upcoming, topRated, popular, error, loading } = state;\n\n  useEffect(() => {\n    async function get() {\n      try {\n        const {\n          data: { results: nowPlaying },\n        } = await moviesAPI.nowPlaying();\n        const {\n          data: { results: upcoming },\n        } = await moviesAPI.upcoming();\n        const {\n          data: { results: topRated },\n        } = await moviesAPI.topRated();\n        const {\n          data: { results: popular },\n        } = await moviesAPI.popular();\n        setState({\n          ...state,\n          nowPlaying,\n          upcoming,\n          topRated,\n          popular,\n          loading: false,\n        });\n      } catch (e) {\n        setState({\n          ...state,\n          error: \"Can't find movies information.\",\n          loading: false,\n        });\n      }\n    }\n    get();\n  }, []);\n\n  return (\n    <HomePresenter\n      nowPlaying={nowPlaying}\n      upcoming={upcoming}\n      topRated={topRated}\n      popular={popular}\n      error={error}\n      loading={loading}\n    />\n  );\n};\n","import React from \"react\";\nimport { TVInterface } from \"./TVContainer\";\nimport styled from \"styled-components\";\nimport Section from \"../../Components/Section\";\nimport Loader from \"../../Components/Loader\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\nimport { Helmet } from \"react-helmet\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nexport default function TVPresenter({\n  topRated,\n  popular,\n  airingToday,\n  error,\n  loading,\n}: TVInterface) {\n  return (\n    <>\n      <Helmet>\n        <title>TV Shows | Nomflix</title>\n      </Helmet>\n      {loading ? (\n        <Loader />\n      ) : (\n        <Container>\n          {topRated && topRated.length > 0 ? (\n            <Section title=\"Top Rated Shows\">\n              {topRated.map((show) => (\n                <Poster\n                  id={show.id}\n                  title={show.name}\n                  rating={show.vote_average}\n                  year={show.first_air_date.substring(0, 4)}\n                  url={show.poster_path}\n                />\n              ))}\n            </Section>\n          ) : null}\n          {popular && popular.length > 0 ? (\n            <Section title=\"Popular Shows\">\n              {popular.map((show) => (\n                <Poster\n                  id={show.id}\n                  title={show.name}\n                  rating={show.vote_average}\n                  year={show.first_air_date.substring(0, 4)}\n                  url={show.poster_path}\n                />\n              ))}\n            </Section>\n          ) : null}\n          {airingToday && airingToday.length > 0 ? (\n            <Section title=\"Airing Today\">\n              {airingToday.map((show) => (\n                <Poster\n                  id={show.id}\n                  title={show.name}\n                  rating={show.vote_average}\n                  year={show.first_air_date.substring(0, 4)}\n                  url={show.poster_path}\n                />\n              ))}\n            </Section>\n          ) : null}\n          {error && <Message text={error} color=\"#e74c3c\" />}\n        </Container>\n      )}\n    </>\n  );\n}\n","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;\n","import React, { useState, useEffect } from \"react\";\nimport TVPresenter from \"./TVPresenter\";\nimport { tvAPI } from \"../../api\";\n\nexport type TvType = {\n  id: string;\n  name: string;\n  vote_average: number;\n  poster_path: string;\n  first_air_date: string;\n};\n\nexport interface TVInterface {\n  topRated: Array<TvType>;\n  popular: Array<TvType>;\n  airingToday: Array<TvType>;\n  error: string;\n  loading: boolean;\n}\nexport default function TVContainer() {\n  const [state, setState] = useState({\n    topRated: [],\n    popular: [],\n    airingToday: [],\n    error: \"\",\n    loading: true,\n  });\n  const { topRated, popular, airingToday, error, loading } = state;\n\n  useEffect(() => {\n    async function get() {\n      try {\n        const {\n          data: { results: topRated },\n        } = await tvAPI.topRated();\n        const {\n          data: { results: popular },\n        } = await tvAPI.popular();\n        const {\n          data: { results: airingToday },\n        } = await tvAPI.airingToday();\n        setState({ ...state, topRated, popular, airingToday, loading: false });\n      } catch (e) {\n        setState({\n          ...state,\n          error: \"Can't find TV information\",\n          loading: false,\n        });\n      }\n    }\n    get();\n  }, []);\n\n  console.log(state);\n  return (\n    <TVPresenter\n      topRated={topRated}\n      popular={popular}\n      airingToday={airingToday}\n      error={error}\n      loading={loading}\n    />\n  );\n}\n","import React from \"react\";\nimport { SearchInterface } from \"./SearchContainer\";\nimport styled from \"styled-components\";\nimport Loader from \"../../Components/Loader\";\nimport Section from \"../../Components/Section\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\nimport { Helmet } from \"react-helmet\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width: 100%;\n`;\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\nexport default function SearchPresenter({\n  movieResults,\n  tvResults,\n  searchTerm,\n  error,\n  loading,\n  handleSubmit,\n  updateTerm,\n}: SearchInterface) {\n  return (\n    <Container>\n      <Helmet>\n        <title>Search | Nomflix</title>\n      </Helmet>\n      <Form onSubmit={handleSubmit}>\n        <Input\n          placeholder=\"Seach Movies or TV Shows...\"\n          onChange={updateTerm}\n          value={searchTerm}\n        ></Input>\n      </Form>\n      {loading ? (\n        <Loader />\n      ) : (\n        <>\n          {movieResults && movieResults.length > 0 && (\n            <Section title=\"Movie Results\">\n              {movieResults.map((movie) => (\n                <Poster\n                  id={movie.id}\n                  title={movie.title}\n                  url={movie.poster_path}\n                  year={movie.release_date.substring(0, 4)}\n                  rating={movie.vote_average}\n                />\n              ))}\n            </Section>\n          )}\n          {tvResults && tvResults.length > 0 && (\n            <Section title=\"TV Shows Results\">\n              {tvResults.map((show) => (\n                <Poster\n                  id={show.id}\n                  title={show.name}\n                  url={show.poster_path}\n                  year={show.first_air_date.substring(0, 4)}\n                  rating={show.vote_average}\n                />\n              ))}\n            </Section>\n          )}\n          {error && <Message text={error} color=\"#e74c3c\" />}\n          {tvResults &&\n            movieResults &&\n            tvResults.length === 0 &&\n            movieResults.length === 0 && (\n              <Message\n                text={`Nothing found for: ${searchTerm}`}\n                color=\"#95a5a6\"\n              />\n            )}\n        </>\n      )}\n    </Container>\n  );\n}\n","import SearchContainer from \"./SearchContainer\";\nexport default SearchContainer;\n","import React, { useState, useEffect } from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport { moviesAPI, tvAPI } from \"../../api\";\nimport { MovieType } from \"../Home/HomeContainer\";\nimport { TvType } from \"../TV/TVContainer\";\nexport interface SearchInterface {\n  movieResults: Array<MovieType> | null;\n  tvResults: Array<TvType> | null;\n  searchTerm: string;\n  error: string;\n  loading: boolean;\n  handleSubmit: (e: React.FormEvent<HTMLFormElement>) => void;\n  updateTerm: (e: React.ChangeEvent<HTMLInputElement>) => void;\n}\nexport default function SearchContainer() {\n  const [state, setState] = useState({\n    movieResults: null,\n    tvResults: null,\n    searchTerm: \"\",\n    error: \"\",\n    loading: false,\n  });\n  const { movieResults, tvResults, searchTerm, error, loading } = state;\n\n  const searchByTerm = async (term: string) => {\n    setState({ ...state, loading: true });\n    try {\n      const {\n        data: { results: movieResults },\n      } = await moviesAPI.search(term);\n      const {\n        data: { results: tvResults },\n      } = await tvAPI.search(term);\n      setState({ ...state, movieResults, tvResults, loading: false });\n    } catch (e) {\n      setState({ ...state, error: \"Can't find results\", loading: false });\n    }\n  };\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (searchTerm !== \"\") {\n      searchByTerm(searchTerm);\n    }\n  };\n\n  const updateTerm = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const {\n      target: { value: term },\n    } = e;\n    setState({ ...state, searchTerm: term });\n  };\n\n  return (\n    <SearchPresenter\n      movieResults={movieResults}\n      tvResults={tvResults}\n      searchTerm={searchTerm}\n      error={error}\n      loading={loading}\n      handleSubmit={handleSubmit}\n      updateTerm={updateTerm}\n    />\n  );\n}\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport { Link, useLocation } from \"react-router-dom\";\n\ntype ItemProps = {\n  current: boolean;\n};\n\nconst Header = styled.header`\n  color: white;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n\n  background-color: rgba(20, 20, 22, 0.8);\n  z-index: 10;\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst List = styled.ul`\n  display: flex;\n`;\n\nconst Item = styled.li<ItemProps>`\n  width: 70px;\n  height: 50px;\n  text-align: center;\n  border-bottom: 3px solid\n    ${(props) => (props.current ? \"#3498db\" : \"transparent\")};\n  transition: border-bottom 0.5s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\nexport default () => {\n  const pathname = useLocation().pathname;\n  return (\n    <Header>\n      <List>\n        <Item current={pathname === \"/\"}>\n          <SLink to=\"/\">Movies</SLink>\n        </Item>\n        <Item current={pathname === \"/tv\"}>\n          <SLink to=\"/tv\">TV Shows</SLink>\n        </Item>\n        <Item current={pathname === \"/search\"}>\n          <SLink to=\"/search\">Search</SLink>\n        </Item>\n      </List>\n    </Header>\n  );\n};\n","import React from \"react\";\n\ntype VideoType = {\n  key: string;\n  site: string;\n  type: string;\n  name: string;\n};\n\ntype TabInterface = {\n  menu: string;\n  info: {\n    videos: {\n      results: Array<VideoType>;\n    };\n  };\n};\n\nconst DetailTabPresenter = ({ menu, info }: TabInterface) => {\n  if (menu === \"video\") {\n    return (\n      <iframe\n        src={`https://www.youtube.com/embed/${info.videos.results[0].key}`}\n      ></iframe>\n    );\n  }\n  return <div>Tabbbbb {info.videos.results[0].key}</div>;\n};\n\nexport default DetailTabPresenter;\n","import React from \"react\";\nimport { DetailInterface } from \"./DetailContainer\";\nimport styled from \"styled-components\";\nimport Loader from \"../../Components/Loader\";\nimport { Helmet } from \"react-helmet\";\nimport Message from \"../../Components/Message\";\nimport DetailTabPresenter from \"./DetailTabPresenter\";\nimport { Link, useLocation } from \"react-router-dom\";\n\ntype ImageInterface = {\n  bgImage: string;\n};\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100vw;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${(props: ImageInterface) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  position: relative;\n  z-index: 1;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  background-image: url(${(props: ImageInterface) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  height: 100%;\n  border-radius: 5px;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 10px;\n`;\n\nconst Title = styled.h3`\n  font-size: 32px;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 20px 0;\n  display: flex;\n  align-items: center;\n`;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span`\n  margin: 0 10px;\n`;\n\nconst ImdbItem = styled.img`\n  width: 45px;\n  height: 38px;\n`;\n\nconst Overview = styled.p`\n  font-size: 12px;\n  opacity: 0.7;\n  line-height: 1.5;\n  width: 50%;\n`;\n\nconst TabContainer = styled.div`\n  margin-top: 10px;\n  width: 50%;\n  height: 45px;\n  /* display: flex;\n  justify-content: center; */\n  /* align-items: center; */\n  /* justify-content: center; */\n  /* overflow: hidden; */\n  background-color: rgba(25, 25, 25, 0.6);\n`;\n\nconst TabHeader = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  height: 45px;\n`;\n\nconst SLink = styled(Link)`\n  width: 33%;\n  height: 45px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  border-bottom: 3px solid\n    ${(props: { isActive?: boolean }) =>\n      props.isActive ? \"#a4b0be\" : \"transparent\"};\n  transition: border-bottom 0.5s ease-in-out;\n`;\nconst TabBody = styled.div`\n  margin-top: 8px;\n  display: block;\n  width: 100%;\n  background-color: rgba(25, 25, 25, 0.6);\n  height: auto;\n`;\nexport default function DetailPresenter({\n  result,\n  loading,\n  error,\n}: DetailInterface) {\n  const title = result?.original_title\n    ? result?.original_title\n    : result?.original_name;\n  const pathInfo = useLocation();\n  const { search: query, pathname } = pathInfo;\n  return loading ? (\n    <>\n      <Helmet>\n        <title>Loading | Nomflix</title>\n      </Helmet>\n      <Loader />\n    </>\n  ) : error ? (\n    <Message text={error} color=\"#e74c3c\" />\n  ) : (\n    <Container>\n      <Helmet>\n        <title>{title} | Nomflix</title>\n      </Helmet>\n      <Backdrop\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n      />\n      <Content>\n        <Cover\n          bgImage={\n            result.poster_path\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n              : require(\"../../assets/noPosterSmall.png\")\n          }\n        />\n        <Data>\n          <Title>{title}</Title>\n          <ItemContainer>\n            <Item>\n              {result.release_date\n                ? result.release_date.substring(0, 4)\n                : result.first_air_date.substring(0, 4)}\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.runtime ? result.runtime : result.episode_run_time[0]} min\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.genres &&\n                result.genres.map((genre: { name: string }, idx: number) =>\n                  idx === result.genres.length - 1\n                    ? genre.name\n                    : `${genre.name} / `\n                )}\n            </Item>\n            {result.imdb_id && <Divider>•</Divider>}\n            {result.imdb_id && (\n              <a\n                target=\"_blank\"\n                href={`https://www.imdb.com/title/${result.imdb_id}`}\n              >\n                <ImdbItem\n                  alt=\"IMDB Logo\"\n                  src={\"https://img.icons8.com/color/48/000000/imdb.png\"}\n                />\n              </a>\n            )}\n          </ItemContainer>\n          <Overview>{result.overview}</Overview>\n          <TabContainer>\n            <TabHeader>\n              <SLink\n                isActive={query.includes(\"video\")}\n                to={`${pathname}?tab=video`}\n              >\n                Video\n              </SLink>\n              <SLink\n                isActive={query.includes(\"production\")}\n                to={`${pathname}?tab=production`}\n              >\n                Production\n              </SLink>\n              <SLink\n                isActive={query.includes(\"more\")}\n                to={`${pathname}?tab=more`}\n              >\n                More\n              </SLink>\n            </TabHeader>\n            <TabBody>\n              <DetailTabPresenter menu={query.split(\"=\")[1]} info={result} />\n            </TabBody>\n          </TabContainer>\n        </Data>\n      </Content>\n    </Container>\n  );\n}\n","import DetailContainer from \"./DetailContainer\";\nexport default DetailContainer;\n","import React, { useState, useEffect } from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\nimport { useParams, useHistory, useLocation } from \"react-router-dom\";\nimport { moviesAPI, tvAPI } from \"../../api\";\nexport interface DetailInterface {\n  result: any;\n  error: string;\n  loading: boolean;\n}\ninterface ParamsInterface {\n  id: string;\n}\nexport default function DetailContainer() {\n  const { pathname } = useLocation();\n  const [state, setState] = useState({\n    result: null,\n    loading: true,\n    error: \"\",\n    isMovie: pathname.includes(\"/movie/\"),\n  });\n  const { result, loading, error, isMovie } = state;\n  const { id } = useParams<ParamsInterface>();\n  const { push } = useHistory();\n\n  useEffect(() => {\n    async function get() {\n      const parsedId = parseInt(id);\n\n      if (isNaN(parsedId)) {\n        return push(\"/\");\n      }\n      let result = null;\n      try {\n        if (isMovie) {\n          ({ data: result } = await moviesAPI.movieDetail(parsedId));\n        } else {\n          ({ data: result } = await tvAPI.showDetail(parsedId));\n        }\n        setState({ ...state, loading: false, result });\n      } catch (e) {\n        setState({ ...state, error: \"Can't find anything\", loading: false });\n      }\n    }\n    get();\n  }, []);\n  return <DetailPresenter result={result} loading={loading} error={error} />;\n}\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\nimport Home from \"../Routes/Home\";\nimport TV from \"../Routes/TV\";\nimport Search from \"../Routes/Search\";\nimport Header from \"./Header\";\nimport Detail from \"../Routes/Detail\";\n\nexport default () => (\n  <Router>\n    <>\n      <Header />\n      <Route path=\"/\" exact component={Home} />\n      <Switch>\n        <Route path=\"/tv\" exact component={TV} />\n        <Route path=\"/search\" component={Search} />\n        <Route path=\"/movie/:id\" component={Detail} />\n        <Route path=\"/show/:id\" component={Detail} />\n        <Redirect from=\"*\" to=\"/\" />\n      </Switch>\n    </>\n  </Router>\n);\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst GlobalStyle = createGlobalStyle`\n    ${reset};\n    a{\n        text-decoration:none;\n        color:inherit;\n    }\n    * {\n        box-sizing: border-box;\n    }\n    body {\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size: 12px;\n        background-color: rgba(20, 20, 20, 1);\n        color: white;\n        padding-top: 50px;\n    }\n`;\n\nexport default GlobalStyle;\n","import React from \"react\";\nimport Router from \"./Router\";\nimport GlobalStyle from \"./GlobalStyles\";\n\nfunction App() {\n  return (\n    <>\n      <Router />\n      <GlobalStyle />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}